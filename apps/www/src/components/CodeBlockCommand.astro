---
import { cn } from '@/lib/utils'
import { Tabs, TabsList, TabsTrigger, TabsContent } from './tabs'
import { buttonVariants } from '@/registry/new-york/ui/button'

export type Props = {
  __npmCommand__: string
  __pnpmCommand__: string
  __yarnCommand__: string
  __bunCommand__: string
}

const { __bunCommand__, __npmCommand__, __pnpmCommand__, __yarnCommand__ } = Astro.props

const tabs = {
  pnpm: __pnpmCommand__,
  npm: __npmCommand__,
  yarn: __yarnCommand__,
  bun: __bunCommand__,
}
---

<div
  class="relative mt-6 max-h-[650px] overflow-x-auto rounded-xl bg-zinc-950 dark:bg-zinc-900"
  x-data={`{
    copyText: '',
    copyNotification: false,
    setCopyText(value) {
      this.copyText = value;
    },
    init() {
      this.setCopyText(\`${__pnpmCommand__}\`);
    },
    copyToClipboard() {
      navigator.clipboard.writeText(this.copyText);
      this.copyNotification = true;
      let that = this;
      setTimeout(function(){
          that.copyNotification = false;
      }, 2000);
    }
  }`}
  x-init="init()"
>
  <Tabs>
    <div class="flex items-center justify-between border-b border-zinc-800 bg-zinc-900 px-3 pt-2.5">
      <TabsList class="h-7 translate-y-[2px] gap-3 bg-transparent p-0 pl-1">
        {
          Object.entries(tabs).map(([key, value]) => {
            return (
              <div>
                <TabsTrigger
                  class="rounded-none border-b border-transparent bg-transparent p-0 pb-1.5 font-mono text-zinc-400 data-[state=active]:border-b-zinc-50 data-[state=active]:bg-transparent data-[state=active]:text-zinc-50"
                  x-on:click={`setCopyText('${value.trim()}');`}
                >
                  {key}
                </TabsTrigger>
              </div>
            )
          })
        }
      </TabsList>
    </div>
    <div class="overflow-x-auto">
      {
        Object.entries(tabs).map(([_, value]) => {
          return (
            <TabsContent class="mt-0">
              <pre class="px-4 py-5"><code class="relative font-mono text-sm leading-none" data-language="bash">{value}</code></pre>
            </TabsContent>
          )
        })
      }
    </div>
  </Tabs>
  <button
    class={cn(
      buttonVariants({
        size: 'icon',
        variant: 'ghost',
      }),
      'absolute right-2.5 top-2 z-10 h-6 w-6 text-zinc-50 hover:bg-zinc-700 hover:text-zinc-50 [&_svg]:h-3 [&_svg]:w-3',
    )}
    @click="copyToClipboard();"
  >
    <span class="sr-only">Copy</span>
    <svg
      x-show="!copyNotification"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-clipboard"
    >
      <rect width="8" height="4" x="8" y="2" rx="1" ry="1"></rect>
      <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
    </svg>

    <svg
      x-show="copyNotification"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-check"
    >
      <path d="M20 6 9 17l-5-5"></path>
    </svg>
  </button>
</div>
