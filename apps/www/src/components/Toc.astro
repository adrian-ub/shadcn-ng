---
import type { TableOfContents } from '~/lib/toc'
import Tree from './Tree.astro'

type Props = {
  toc: TableOfContents
}

const { toc } = Astro.props
---

<script>
  const watchIntersectionObserver: () => void = () => {
    const observer = new IntersectionObserver(
      (entries) => {
        let firstIntersectingEntry = null

        for (const entry of entries) {
          if (entry.isIntersecting) {
            firstIntersectingEntry = entry
            break
          }
        }

        if (firstIntersectingEntry) {
          const headingFragment = `#${firstIntersectingEntry.target.id}`
          const tocItem = document.querySelector(`a[href="${window.location.pathname + headingFragment}"]`)
          const previouslyActivatedItem = document.querySelector('.active-toc-item')

          previouslyActivatedItem?.classList.remove('active-toc-item')
          tocItem?.classList.add('active-toc-item')
        }
      },
      { root: null, rootMargin: '0px', threshold: [1] },
    )

    const sectionHeadings = document.querySelectorAll('h2, h3')

    for (const heading of sectionHeadings) {
      observer.observe(heading)
    }
  }

  watchIntersectionObserver()

  document.addEventListener('astro:after-swap', watchIntersectionObserver)
</script>

<aside class="space-y-2">
  {
    toc.items?.length && (
      <>
        <p class="font-medium">On This Page</p>
        <ul class="m-0 list-none">
          <Tree tree={toc} />
        </ul>
      </>
    )
  }
</aside>
