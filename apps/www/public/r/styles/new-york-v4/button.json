{
  "$schema": "https://ui.adrianub.dev/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/new-york-v4/ui/button.ts",
      "content": "import type { VariantProps } from 'class-variance-authority'\n\nimport { computed, Directive, input } from '@angular/core'\n\nimport { cva } from 'class-variance-authority'\nimport { cn } from '~/lib/utils'\n\nexport const buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*=\\'size-\\'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow-sm hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40',\n        outline:\n          'border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-9 px-4 py-2 has-[>*>svg]:px-3',\n        sm: 'h-8 rounded-md px-3 has-[>*>svg]:px-2.5',\n        lg: 'h-10 rounded-md px-6 has-[>*>svg]:px-4',\n        icon: 'size-9',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\ntype ButtonProps = VariantProps<typeof buttonVariants>\n\nexport type UbButtonSize = NonNullable<ButtonProps['size']>\nexport type UbButtonVariant = NonNullable<ButtonProps['variant']>\n\n@Directive({\n  selector: '[ubButton]',\n  standalone: true,\n  host: {\n    '[class]': 'computedClass()',\n  },\n})\nexport class UbButtonDirective {\n  readonly class = input<string>()\n\n  readonly variant = input<UbButtonVariant>('default')\n\n  readonly size = input<UbButtonSize>('default')\n\n  protected computedClass = computed(() =>\n    cn(\n      buttonVariants({\n        variant: this.variant(),\n        size: this.size(),\n        class: this.class(),\n      }),\n    ),\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}
