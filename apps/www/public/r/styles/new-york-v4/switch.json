{
  "$schema": "https://ui.adrianub.dev/schema/registry-item.json",
  "name": "switch",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ng/primitives"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/ui/switch.ts",
      "content": "import { Component, computed, input } from '@angular/core'\nimport { RdxSwitchRootDirective, RdxSwitchThumbDirective } from '@radix-ng/primitives/switch'\n\nimport { cn } from '~/lib/utils'\n\n@Component({\n  standalone: true,\n  selector: 'button[ubSwitch]',\n  imports: [RdxSwitchThumbDirective],\n  hostDirectives: [\n    {\n      directive: RdxSwitchRootDirective,\n      inputs: ['id', 'required', 'checked', 'disabled'],\n      outputs: ['onCheckedChange'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n  },\n  template: `\n    <span rdxSwitchThumb class=\"bg-background pointer-events-none block size-4 rounded-full ring-0 shadow-lg transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"></span>\n    `,\n})\nexport class SwitchDirective {\n  readonly class = input<string>()\n  readonly computedClass = computed(() => {\n    return cn('peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 inline-flex h-5 w-9 shrink-0 items-center rounded-full border-2 border-transparent shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-hidden focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-0', this.class())\n  })\n}\n",
      "type": "registry:ui"
    }
  ]
}
