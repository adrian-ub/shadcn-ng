{
  "$schema": "https://ui.adrianub.dev/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ng/primitives"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/ui/dropdown-menu.ts",
      "content": "import { booleanAttribute, Component, computed, Directive, input } from '@angular/core'\nimport { NgIcon, provideIcons } from '@ng-icons/core'\nimport { radixCheck, radixChevronRight, radixCircle } from '@ng-icons/radix-icons'\nimport {\n  DropdownAlign,\n  DropdownSide,\n  RdxDropdownMenuContentDirective,\n  RdxDropdownMenuItemCheckboxDirective,\n  RdxDropdownMenuItemDirective,\n  RdxDropdownMenuItemIndicatorDirective,\n  RdxDropdownMenuItemRadioDirective,\n  RdxDropdownMenuItemRadioGroupDirective,\n  RdxDropdownMenuLabelDirective,\n  RdxDropdownMenuSeparatorDirective,\n  RdxDropdownMenuTriggerDirective,\n} from '@radix-ng/primitives/dropdown-menu'\nimport { RdxMenuGroupDirective } from '@radix-ng/primitives/menu'\nimport { cn } from '~/lib/utils'\n\nexport { DropdownAlign, DropdownSide }\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuTrigger]',\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuTriggerDirective,\n      inputs: [\n        'rdxDropdownMenuTrigger: ubDropdownMenuTrigger',\n        'disabled',\n        'side',\n        'align',\n        'sideOffset',\n        'alignOffset',\n      ],\n      outputs: ['onOpenChange'],\n    },\n  ],\n})\nexport class UbDropdownMenuTriggerDirective { }\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuContent]',\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuContentDirective,\n      inputs: ['closeOnEscape', 'onEscapeKeyDown'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n  },\n})\nexport class UbDropdownMenuContentDirective {\n  class = input<string>()\n  computedClass = computed(() => cn(\n    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-md',\n    this.class(),\n  ))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuItem]',\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuItemDirective,\n      inputs: ['disabled'],\n      outputs: ['onSelect'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n  },\n})\nexport class UbDropdownMenuItemDirective {\n  class = input<string>()\n  inset = input(false, {\n    transform: booleanAttribute,\n  })\n\n  computedClass = computed(() => cn(\n    'focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*=\\'text-\\'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*=\\'size-\\'])]:size-4',\n    this.inset() && 'pl-8',\n    this.class(),\n  ))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuLabel]',\n  hostDirectives: [RdxDropdownMenuLabelDirective],\n  host: {\n    '[class]': 'computedClass()',\n    '[attr.data-inset]': 'inset()',\n  },\n})\nexport class UbDropdownMenuLabelDirective {\n  class = input<string>()\n  inset = input(false, {\n    transform: booleanAttribute,\n  })\n\n  computedClass = computed(() => cn(\n    'px-2 py-1.5 text-sm font-semibold data-[inset]:pl-8',\n    this.class(),\n  ))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuSeparator]',\n  hostDirectives: [RdxDropdownMenuSeparatorDirective],\n  host: {\n    '[class]': 'computedClass()',\n  },\n})\nexport class UbDropdownMenuSeparator {\n  class = input<string>()\n  computedClass = computed(() => cn('bg-border -mx-1 my-1 h-px', this.class()))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuGroup]',\n  hostDirectives: [RdxMenuGroupDirective],\n})\nexport class UbDropdownMenuGroupDirective { }\n\n@Directive({\n  standalone: true,\n  selector: 'span[ubDropdownMenuShortcut]',\n  host: {\n    '[class]': 'computedClass()',\n  },\n})\nexport class UbDropdownMenuShortcutDirective {\n  class = input<string>()\n  computedClass = computed(() => cn('text-muted-foreground ml-auto text-xs tracking-widest', this.class()))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuSubContent]',\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuContentDirective,\n      inputs: ['closeOnEscape', 'onEscapeKeyDown'],\n    },\n  ],\n})\nexport class UbDropdownMenuSubContentDirective { }\n\n@Component({\n  standalone: true,\n  selector: '[ubDropdownMenuSubTrigger]',\n  imports: [NgIcon],\n  providers: [provideIcons({ radixChevronRight })],\n  hostDirectives: [\n    UbDropdownMenuItemDirective,\n    {\n      directive: RdxDropdownMenuTriggerDirective,\n      inputs: [\n        'rdxDropdownMenuTrigger: ubDropdownMenuSubTrigger',\n        'disabled',\n        'side',\n        'align',\n        'sideOffset',\n        'alignOffset',\n      ],\n      outputs: ['onOpenChange'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n    '[attr.data-inset]': 'inset()',\n  },\n  template: `\n  <ng-content />\n  <ng-icon name=\"radixChevronRight\" class=\"ml-auto\" />\n  `,\n})\nexport class UbDropdownMenuSubTrigger {\n  class = input<string>()\n  inset = input(false, {\n    transform: booleanAttribute,\n  })\n\n  computedClass = computed(() => cn('focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8', this.class()))\n}\n\n@Component({\n  standalone: true,\n  selector: '[ubDropdownMenuCheckboxItem]',\n  imports: [NgIcon, RdxDropdownMenuItemIndicatorDirective],\n  providers: [provideIcons({ radixCheck })],\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuItemCheckboxDirective,\n      inputs: ['checked', 'disabled'],\n      outputs: ['checkedChange'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n  },\n  template: `\n  <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n    <ng-icon name=\"radixCheck\" class=\"size-4\" rdxDropdownMenuItemIndicator />\n  </span>\n  <ng-content></ng-content>\n  `,\n})\nexport class UbDropdownMenuCheckboxItemDirective {\n  class = input<string>()\n  computedClass = computed(() => cn('focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*=\\'size-\\'])]:size-4', this.class(),\n  ))\n}\n\n@Component({\n  standalone: true,\n  selector: '[ubDropdownMenuRadioItem]',\n  imports: [NgIcon, RdxDropdownMenuItemIndicatorDirective],\n  providers: [provideIcons({ radixCircle })],\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuItemRadioDirective,\n      inputs: ['value'],\n    },\n  ],\n  host: {\n    '[class]': 'computedClass()',\n  },\n  template: `\n  <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n    <ng-icon name=\"radixCircle\" class=\"size-2 fill-current\" rdxDropdownMenuItemIndicator />\n  </span>\n  <ng-content></ng-content>\n  `,\n})\nexport class UbDropdownMenuRadioItemDirective {\n  class = input<string>()\n  computedClass = computed(() => cn('focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*=\\'size-\\'])]:size-4', this.class(),\n  ))\n}\n\n@Directive({\n  standalone: true,\n  selector: '[ubDropdownMenuRadioGroup]',\n  hostDirectives: [\n    {\n      directive: RdxDropdownMenuItemRadioGroupDirective,\n      inputs: ['value'],\n      outputs: ['valueChange'],\n    },\n  ],\n})\nexport class UbDropdownMenuRadioGroupDirective { }\n",
      "type": "registry:ui"
    }
  ]
}
