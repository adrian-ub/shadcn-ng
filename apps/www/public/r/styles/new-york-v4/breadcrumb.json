{
  "$schema": "https://ui.adrianub.dev/schema/registry-item.json",
  "name": "breadcrumb",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/new-york-v4/ui/breadcrumb.ts",
      "content": "import { Component, computed, Directive, input } from '@angular/core'\n\nimport { NgIconComponent, provideIcons } from '@ng-icons/core'\nimport { radixChevronRight, radixDotsHorizontal } from '@ng-icons/radix-icons'\n\nimport { cn } from '~/lib/utils'\n\n@Directive({\n  selector: 'nav[ubBreadcrumb]',\n  standalone: true,\n  host: {\n    'aria-label': 'breadcrumb',\n    'data-slot': 'breadcrumb',\n  },\n})\nexport class UbBreadcrumbDirective {}\n\n@Directive({\n  selector: 'ol[ubBreadcrumbList]',\n  standalone: true,\n  host: {\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-list',\n  },\n})\nexport class UbBreadcrumbListDirective {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn(\n      'text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5',\n      this.class(),\n    ),\n  )\n}\n\n@Directive({\n  selector: 'li[ubBreadcrumbItem]',\n  standalone: true,\n  host: {\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-item',\n  },\n})\nexport class UbBreadcrumbItemDirective {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn('inline-flex items-center gap-1.5', this.class()),\n  )\n}\n\n@Directive({\n  selector: '[ubBreadcrumbLink], a[ubBreadcrumbLink]',\n  standalone: true,\n  host: {\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-link',\n  },\n})\nexport class UbBreadcrumbLinkDirective {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn('hover:text-foreground transition-colors', this.class()),\n  )\n}\n\n@Directive({\n  selector: 'span[ubBreadcrumbPage]',\n  standalone: true,\n  host: {\n    'role': 'link',\n    'aria-disabled': 'true',\n    'aria-current': 'page',\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-page',\n  },\n})\nexport class UbBreadcrumbPageDirective {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn('text-foreground font-normal', this.class()),\n  )\n}\n\n@Component({\n  selector: 'li[ubBreadcrumbSeparator]',\n  standalone: true,\n  imports: [NgIconComponent],\n  viewProviders: [provideIcons({ radixChevronRight })],\n  template: `\n    <span #ref><ng-content></ng-content></span>\n    @if (ref.children.length == 0) {\n      <ng-icon name=\"radixChevronRight\" />\n    }\n  `,\n  host: {\n    'role': 'presentation',\n    'aria-hidden': 'true',\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-separator',\n  },\n})\nexport class UbBreadcrumbSeparatorComponent {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn('[&>*>svg]:size-3.5', this.class()),\n  )\n}\n\n@Component({\n  selector: 'span[ubBreadcrumbEllipsis]',\n  standalone: true,\n  imports: [NgIconComponent],\n  viewProviders: [provideIcons({ radixDotsHorizontal })],\n  template: `\n    <ng-icon name=\"radixDotsHorizontal\" class=\"size-4\" />\n    <span class=\"sr-only\">More</span>\n  `,\n  host: {\n    'role': 'presentation',\n    'aria-hidden': 'true',\n    '[class]': 'computedClass()',\n    'data-slot': 'breadcrumb-ellipsis',\n  },\n})\nexport class UbBreadcrumbEllipsisComponent {\n  readonly class = input<string>()\n\n  protected computedClass = computed(() =>\n    cn('flex size-9 items-center justify-center', this.class()),\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}
